<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- Fonts -->
    <FontFamily x:Key="DefaultFontFamily">Segoe UI, Segoe UI Variable, Segoe MDL2 Assets, Roboto, 'Noto Sans', Arial, sans-serif</FontFamily>
    <FontWeight x:Key="DefaultFontWeight">Normal</FontWeight>
    <system:Double x:Key="DefaultFontSize">16</system:Double>

    <!-- Default style for all controls -->
    <Style TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextHintingMode" Value="Auto" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Default style for TextBlock -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextHintingMode" Value="Auto" />
        <Setter Property="UseLayoutRounding" Value="True" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Default style for any element -->
    <Style TargetType="{x:Type TextElement}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextHintingMode" Value="Auto" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Default style for Tooltip -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Background" Value="{StaticResource DropdownBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderGradientBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,6" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextHintingMode" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect Color="{StaticResource ShadowColor}"
                                              BlurRadius="10"
                                              ShadowDepth="3"
                                              Opacity="0.3"
                                              Direction="270" />
                        </Border.Effect>
                        <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- System Tray Context Menu Style -->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{StaticResource DropdownBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderGradientBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Border.Effect>
                            <DropShadowEffect Color="{StaticResource ShadowColor}" Direction="270" ShadowDepth="3" BlurRadius="5" Opacity="0.3" />
                        </Border.Effect>
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <!-- System Tray Separator Style -->
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
                <Setter Property="Opacity" Value="0.2" />
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="5,3" />
            </Style>

            <!-- System Tray Menu Item Style -->
            <Style TargetType="MenuItem">
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="10,0,10,5" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Height" Value="32" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="24" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Icon -->
                                    <ContentPresenter x:Name="Icon"
                                                      Grid.Column="0"
                                                      ContentSource="Icon"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      TextBlock.Foreground="{StaticResource PrimaryLightBrush}"
                                                      Margin="8,0,0,0" />

                                    <!-- Checkmark (shown when IsChecked=True) -->
                                    <Path x:Name="Checkmark"
                                          Grid.Column="0"
                                          Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"
                                          Fill="{StaticResource PrimaryBrush}"
                                          Stretch="Uniform"
                                          Width="16"
                                          Height="16"
                                          Margin="8,0,0,0"
                                          Visibility="Collapsed" />

                                    <!-- Header -->
                                    <ContentPresenter Grid.Column="1"
                                                      ContentSource="Header"
                                                      Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="Center"
                                                      RecognizesAccessKey="True" />

                                    <!-- Submenu Arrow -->
                                    <Path x:Name="Arrow"
                                          Grid.Column="2"
                                          Data="M0,0L4,3.5L0,7z"
                                          Fill="{TemplateBinding Foreground}"
                                          Margin="10,0,10,0"
                                          VerticalAlignment="Center"
                                          Visibility="Collapsed" />

                                    <!-- Submenu Popup -->
                                    <Popup Grid.Column="0" x:Name="SubMenuPopup"
                                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Left"
                                           HorizontalOffset="3"
                                           VerticalOffset="-3"
                                           AllowsTransparency="True"
                                           Focusable="False">
                                        <Border x:Name="SubMenuBorder"
                                                Background="{StaticResource DropdownBackgroundBrush}"
                                                BorderBrush="{StaticResource BorderGradientBrush}"
                                                BorderThickness="1"
                                                Padding="2">
                                            <Border.Effect>
                                                <DropShadowEffect Color="{StaticResource ShadowColor}" Direction="270" ShadowDepth="3"
                                                                  BlurRadius="5" Opacity="0.3" />
                                            </Border.Effect>
                                            <ScrollViewer CanContentScroll="True">
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <!-- Submenu Triggers -->
                                <Trigger Property="HasItems" Value="True">
                                    <Setter TargetName="Arrow" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <!-- Mouse Over Trigger -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ControlHoverBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource TextAccentBrush}" />
                                </Trigger>

                                <!-- Disabled Trigger -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextTertiaryBrush}" />
                                    <Setter TargetName="Checkmark" Property="Fill" Value="{StaticResource TextTertiaryBrush}" />
                                </Trigger>

                                <!-- Selected Trigger -->
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource ControlHoverBrush}" />
                                </Trigger>

                                <!-- When checked, show the checkmark and hide the icon -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Checkmark" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <!-- When checked and enabled, set the foreground to TextAccentBrush -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True" />
                                        <Condition Property="IsEnabled" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{StaticResource TextAccentBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>